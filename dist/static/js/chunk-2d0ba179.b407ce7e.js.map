{"version":3,"sources":["webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.3@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.5.0@swiper/dist/js/swiper.esm.bundle.js"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","key","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","index","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isSafari","ua","toLowerCase","isIE","isEdge","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","animating","swiper_esm_bundle_transition","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","__webpack_exports__"],"mappings":"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","file":"static/js/chunk-2d0ba179.b407ce7e.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n"],"sourceRoot":""}